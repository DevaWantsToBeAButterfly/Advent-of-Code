testInput = ['[({(<(())[]>[[{[]{<()<>>', '[(()[<>])]({[<{<<[]>>(', '{([(<{}[<>[]}>{[]{[(<()>', '(((({<>}<{<{<>}{[]{[]{}', '[[<[([]))<([[{}[[()]]]', '[{[{({}]{}}([{[{{{}}([]', '{<[[]]>}<{[{[{[]{()[[[]', '[<(<(<(<{}))><([]([]()', '<{([([[(<>()){}]>(<<{{', '<{([{{}}[<[[[<>{}]]]>[]]']

puzzleInput = ['((((<([<{(<(<[<><>>[{}()]>{{()[]}<[][]>}){{(()<>)(<>())}}>{<(([]())({}<>))[<{}()>{{}{}}]>}){{<', '<{<[([{<{{<{[({}())[<>()]]([{}()]{{}[]})}{([[]]<{}[]>){<<>[]><<>[]>}}>}}{[{[{[[]{}]<[][]>>{[<', '[([<[(({(<[<[(<><>)([]())][((){})<<>[]>]>{([<>()]<<>[]>)({{}<>})}][{(<()()>{<><>}){[<>[]][<', '[<[[[{{<{{((<[[][]][[]<>]><({}[])>){{[<>()]{{}{}}}<(()())[<>[]]}}){[(({}{}))](<(<>)>{(<>())(<>[])})}}<<[<<<><', '{{{[{[[{{{{{<<{}<>>{{}[]}>[{<>()}<<>{}>]}<{<<>{}>{[]<>}}({<>()}<(){}>)>}[[(([]<>)<{}()>)]{{[<>{}](<><>)}{([', '{{<[([<[({(<{([][])[{}{}]>([{}<>](<><>))><[[<>{}]]<{<><>}{{}()}>>)<[[([]{})]([<>[]]({}[]))]({(', '({(([[<<([(([([]())<{}<>>](<()[]>[[]{}])){{{()[]}<<><>>}})<{((<><>)[()[]]]}>])><{<(([{()[]}])[{[{}<>]({', '{[<{(([{[([(<[(){}]<()[]>>[<{}<>>[[]<>]>)]{{({[]}({}()))<<{}<>>{<>{}}>}[({<>[]}[[]<>])([{}[]](<>[]))]})', '[({<({([<{<<({()()}<[]{}>)<<<>()>[<>()])>[(<{}<>>[[]()])<(()()){[]<>}>]>}[([<<{}<>>({}{})>[<[]<>><<>()', '[([(<[([<[([[((){})<()[]>]([{}[]](<>()))]){<[<<>()>(<>{})][[<><>]]>({([][]){<>[]}}[{{}}<()()>])}', '{{[[(([{{((<{[{}[]][{}()]}{((){})<()()>}>(<[{}{}]{()<>}>(<{}()>(()()))))){[[[<{}[]><[]<>>][[{}[]]{', '[{(<{<[<(<{({[()[]]([]<>)}[[<>()]{(){}}])}({{<{}<>><{}()>}{([]())[()<>]}}[(((){})<<>[]>)])><([[<()', '[{<[<{<(({<<{{{}<>}}{[[]()]}>>}[((<[<>][[]<>]>))(({[()<>]<<>()>}<{[][]}<[][]>>))>))>}><[<<<([{{([][])({}<>)', '<{([({[<{{{<(<[]()>[()<>])({<><>}[{}])}}<[(<[]<>>((){})){({}[])(<><>)}]<[[<>[]]<{}()>]>>}{[<<([', '<[{[[[{<{[<({[[]{}]{<>]}[[[]{}]<[]<>>])>]}{{{({<<>{}>(<><>)}[<{}[]>]){([[][]](<>{}))}}{<[(()())(<>(', '(<{(<[({<(<((<(){}>[{}<>])<{(){}}({}[])>)<{<{}[]>{()[]}}([()<>]<<>[]>)>){<<<{}()><{}[]>>{{[][]}}', '[((((<[(([[<{{()[]}{<>()}}{<[]{}>{<>[]}}>[[{<>{}}([]{})]]][([<()<>><{}{}>]<<[]()>{{}()}>)]](<{[[', '<(({<{[(([<[{(<>)<<>{}>}[(<>{}){{}<>}]]>(((([][])(<>{}))))](([{{<>()}(()[])}{<<>>}][([{}{}]', '[{({[[[[<{(<[{()}<[]<>>]{([])}>[(<()<>>({}<>))[({})]]){<<[[]]{<>{}}>{({}{})[<>()]}><{{()<>}({}[])', '[[([[{(((<{(({(){}}[[]{}])[{{}()}[{}()]])[<<{}[]>((){})>]}>{<<[<(){}>](<[]<>>{{}<>})>>}))[{{(({[<><>][', '{({{[{{<<<<<((<>())<[]<>>)<<()<>>({}[])>>>(<{[[]{}]{<>[]}}(<()<>>{[]<>})>({{[][]}([]())}{({}{})[[]', '(((<(([<[[{<{[[]<>][[]<>]}>{<<<>[]>>([[]()][{}()])}}]<{<{(()<>)[<>()>}[[{}[]]]>[<[<>[]]([]', '{[<[<[[<[[<([{{}{}}<[]()>](<{}<>>(()())))<[([]<>){[]<>}]<[<>{}]<[]{}>>>>[([([])[[]{}]]{<{}<>><[]<', '<({<[<{<[<{[(<{}()>)[[[][]]<<>{}>]]{[[()()]<[]<>>][<[]()>{{}[]}]}}[({<{}<>>})<[{{}()}{()<>}]{<[]<>>(', '({<[<<{<[[<{(<{}()><(){}>)<<[][]>{{}{}}>}[<[{}<>][<>[]]>({()()}<[][]>)]>]}({(<(<<>[]>[<>()])><', '[({((({[<{<{{[<>{}]({}{})}}><<({()[]}{(){}})([[][]]<<>[]>)>{<{()}(<>)>}>}><{<(<<{}>(()[])>)', '<{<([<{{[(<({<{}[]><[][]>}<{(){}}<[]>>)<<({}{})>[{(){}}<[]()>]>>{<{{[]<>)[[]()]}{(<>[])[()<>]}>[', '[<<{(<[{[{<{<[(){}]><{<>}<[]()>>}{<[<>{}](<>>>}>[[<{()()}[()[]]>{[{}()]<{}[]>}]]}]}]>{{<[<[<<{()[]}[[]()]>', '<(<{<[[{<<((<(<>[])(<>{})><[[][]]({}[])>))>(<{<<<>[]>{{}[]}>[({}<>)[()<>]]}>)>}]]>}{{(<<<[', '<[((([<{({({[({}<>}({}{})]<(()())[<>()]>}{{<()[]>}{<<>()>(<>{})}})[<[({}())(<>[])]<{{}()}>>', '[{(<[<((<(({<([]())({}[])>([<>()]{[][]})}){<[([]())({}[])]<<<>()>>>})>{<{<([[]{}][[]()])<(()<>)(<>{})>>}{<{{', '<{[[{({[{[<{(([]<>)<(){}>)<<<><>>[[]<>]>}>{({{()[]}(()[])}<[[]()]>){[([]<>)<[]{}>]}}](<<{[(){}]{<>}}{([]<>)(', '<{(<<[<[[<[[[{()[]}[<>{}]](<<>{}><[][]>)]{(([]){[][]})<<()<>>>}]>[<[({(){}]){<{}{}>([][])}]>(({[<>[]', '<{[<<({[(<({([()][{}()])}([{{}{}}([]<>)]{{{}}<{}()>})){<{{{}}(()[])}([[]<>]{()[]})><<(<>[]', '{({[{[(<<[<{[<<>()>[[]<>>](<<>()>[<>()])}<<[()[]]<<>{}>>{{(){}}[[][]]}>>]>>[(({({([]{})<<>{}>}<{()[]}{[]{}}', '([(({[{<{{[<{<{}{}>(<>{})}>([<{}[]><<><>>]{(()<>){<><>}})]}[([<[()[]]{<><>}><{[]}{{}[])>]([({}<>)<()<>>]))', '{<<<[([(<<<{<{{}[]}{<>()}><<{}()><(){}>>}>[<<[<><>]<()()>><<(){}>{[]<>}>)(<{(){}}({}{})>{[', '(({({[<[(([[(({}[]){<>()})]]<([([]())<{}[]>]){{{{}[]}{<>()}}([[][]](<>{}))}>)[<[{<{}()>{{}<>}}]<<', '{{(({{<((<<({[(){}]<[]()>}(<{}()>[<>()]))[{{{}<>}[<>()]}[{[]}{()()}]]>][(<<<[]<>>{{}()}>(<{}{}>{<>{', '({([{<{{{[{({{[]()}<[]{}>})[{<<>()>{[]}}<({}{})({}<>)>]}<{[[[]<>][{}()]][[()<>]([]<>)]}({[<>[]]<{}<>>}<', '[[(<[[({<[{({<{}()>[()[]]}{{[]()}{[][]}})[(({}<>)<<><>>)[([]<>)<{}[]>]]}]>>[{<<(<[[]<>](()[])>[<{}><[]()>', '(<<<<[{<{({<(<{}<>>)>{({[]{}}<<>{}>)<[{}<>]<[]()>>}}){{{{([]<>){(){}}}[{[]<>}[[]{})]}[({(){}', '({[{{[{[[<([[<{}()>[[][]]]{((){}){()<>}}](([{}[]][[][]])[([]())]))>]]{<<<<([{}[]])<([])[{}{}', '({(((({{{[[[[{<><>}]<[<><>][(){}]>]{{(<>()){<>[]}}{<()<>>{<>}}}]]}}<[<<((<{}<>><<>[]>){<<><>>{()', '{{<<{{[<<[[<[<{}>[{}<>]]<<<><>>([]())>>(<(<>())(<>{})>(({}{})(<><>)))]<{{{[]{}}[<>{}]}(<(){}>[()()]', '[<(<<{(([{{(((()()){<>()}){[[]()]})((<{}()>[<><>])[({}[])([]<>)])}{([(<>[])<{}<>>]{[()()][{}()]}){[{<>()}<<>', '(<{(<<{[({{([[[]<>][[][]]][<<>()>[[][]]])}[<<([]())<()()>>{[{}()]<[]()>}><({{}[]}{<>()})>]})[{[[([{}]<{', '<<[[(((({<({{([][]){<>()}}}<{(()())<{}()>}{[[][]]<<>()>}>)>})[{{<{[{<><>}[(){}]]((()[])(<><>))}>([<', '<([<{<{{[[[{<{{}<>}<{}]>({<>{}}[{}<>])}(((<>())<[]()>)((()<>){{}[]}))]<{[[<>][<>{}]][([]())]}([[()<>]{(', '{<((<[[{{([<[[()[]]]<{[]{}}{{}}>>(<(()<>)<[]<>>>[<<>()>[{}<>]])]){([[<[]{}>([]())][{()<>}]]<{<', '((([[<(<<(<({{()[]}{[][]}}{<[]()>[{}()]})[(<<>()>([]<>))<[<>{}]>]>)<<[<[[]<>]>{(()[]){()<>}}]{(', '(<({<{<{[([{{<<>{}>(()[])}}[(({}())([][]))[{{}{}}([]<>)]]](<([[]{}]([]{}))([<><>](()<>))>{[({}{})[()()]][', '{<{{{{{(<{((({{}}[[][]]){([]{}>})<{{()()}[{}<>]}([(){}])>)<<([<>[]]<<>>)[(()<>)([])]><{<()<>>}(<<><', '{{<[{([{{<{([<[]<>>[<>{}]][({}()><<>()>])[<[()[]](()())><[[]]<[]()>>]}{[([<>[]])[<[]{}>]]{{(<><>){{}<>}}(', '[(<({<[{<({[[{[]<>}[[][]]]<{[]()}<[]()>>]<[[[][]]{[]<>}][<[]<>>{[]()}]>}[<<(<>{})[{}{}]>[{{}()}[()()]]><[(', '<([[<(({<{[{{<()[]><{}()>}{{{}<>}}}([{{}[]}<{}<>>]{<[]<>>({}[])})]}>((([{<[]<>>{<>[])}(<<>[]', '({{<[[([{<{{<[<>{}](()<>)><(()())>}[[<{}[]><<>()}]<{()<>}[()()]>]}>{<<([<>()]([]{}))((<>())[[][]])>', '([((([[[{{<((<<><>>{[]})<(<><>)<()<>>>){([[]{}][[][]])<<{}<>>{{}<>}>}>{<<[(){}][()()]>[<[]()><', '[<<[[({<<[[<<<()<>>[()[]]><(()())>>(((()[])[(){}])((<>[]){{}[]>))]<<{[[]()][()]}>{(<{}<>>(<><>))<[<>()][', '{{{[([(({{{(([{}[]](()<>))({{}{}})){[({}())(<>[])]}}{<(([][])[<>()])([(){}][{}[]])>[[[[]()]]({<>()}<<>>)]}', '{<(<(([<[<<[[({}[])<<><>>]]({<[]()>}({[]()}<[]()>))><<(((){})(<>[]))>({{<>[]}({}<>)}{<{}()>(()())})>>([<{{', '[<{[[<[({{{<{{[]{}}<[]{}>}{<<><>>}>}[{[([][])<{}()>]({[]<>}[()()])}[([{}[]][[]<>])]]}}<<{[([{}(', '{[([(<{{{([{<[<><>]<<>{}>>[<{}[]>[[]<>]]}])<({[<[][]><[]<>>][<<><>><{}()>]})>}(<{<[(()[])<()', '{((((<{[[[{([(()[])[<>()]]){[{{}()}]}}{{{({}[]){[][]}}[<[]()>]}}]]{[[<({<><>}(<>[]))[({}{})<()()>]>]{{[', '[(({[[<<{<[[(({}{}){{}{}}>[[[][]]<{}<>>]][{{<>()}{[][]}}]]>[[[<<{}[]>>[[<>[]][<>{}]]]{{{{}(', '[([[[[{((<([{[{}{}]([]())}{[()()][{}<>]}])<({{{}{}}<()()>}<([]{})[(){}]>)<({{}{}}<<>[]>)<[<><>][(){}]>>>>[[', '[{{<[{<((([{{<[][]>{<>[]}}({<><>}<<><>>)}<<<{}{}>{[]{}}>{[[]<>]({})}>][<<{{}}(<>())>{{[][]}<[]>}>', '[(([({<(<{[{<{<>{}}><[()()]<()[]>>}{((()())<<><>>)[<{}<>>[<>()]]}]}{{{(<{}{}><<>[]>){{{}}[(){}]}}}{[<{[]{}}>{', '{[[{<[(<<[({({{}{}}[{}<>])[(<>{})<<><>>]}(([{}{}](()()))(<[]>[<>[]])))<({<[]()>}[[<><>]<()', '<[({({<[((<[<({}<>)({}())>]>[({{[]}<{}()>})((<[][]>((){}))[<(){}><()()>])])([[([{}{}]<(){}>)](<<{}[]>{{}<>}>)', '<<<[<{[[<{[<<([]<>}[{}{}]>>{[(()()){()<>}][<<>{}>{{}{}}]}][[<[[]<>]{<>}><{[]<>}{{}{}}>]<[{()', '([({{[({{{({<[[]]<{}[]>>}{{<[]()]<<><>>}{[()<>]([]())}}){{[<<><>><<>{}>]<(<><>)([]{})>}}}(', '{[[[({{({[((<[[])(<>{})>{[[]<>]<()>})[[<[]<>>[()()]][{[]<>}<<>[]>]])[<{<{}{}>([]())}{[<>{}]}>]]}[((<', '[<(<<<{{((<<({[]{}}([]{})><({}{})>><({<>{}}<()[]>)({[]()}[{}()])>>(([[()[]]<<>[]>](<<>()>({}<>)))<<([', '{[[{{<<[[[[[([()()}(<>[]))]((<<><>>[[]{}])(<{}[]>[{}()]))]{<{{{}<>}}({<>()}{()()})>{{<{}()><{}<>>}}}]]<({<', '<<<[[{(<{({([{<><>}<[][]>]<([]())[{}]>)})<<[<{[]()}({}{})>](<{{}[]}[()[]]>(<[]<>><<>()>)))>}', '([([((([(<({<[[]<>][()()]>})[[<<<>><<>[]>>({()()}([][]))][<({}[])<<>[]>>{{{}()}{[]{}}}]]><<[<{(){', '{[([{{<{{[{{{<<>{}>}}<[(())(<>{})]{({}<>)[{}[]>}>}{<([[]()]([][]))[[<>[]]<()[]>]>}]({{{[[]{}]{{}()}}}}([[', '{[<[(<<<[<{([(<>[])<{}()>]{[[]{}]<[]<>>})}>]{{[(<{<><>}[{}()]>{[[]{}][{}{}]}){[([]<>)({}())]{{(){}}({', '((({<{<[[[({<[[]()]{()()}><[<>()][{}[]]>}<(<{}[]>)((<><>)<{}{}>)>)]]{((<<[{}{}][[]()]>(([]<>)[[]{}])><[{[', '{<[<<([<<<{([{<>[]}[()[]]]([{}<>]<[]<>>))<[{<>[]}[{}]]>}[[<[<><>](<>{})>{[()<>)[{}()]}](<((){})([]<>)>)]>', '{[((<[<((<<<{{{}<>}(<>[])}({<><>}(<>{}))>[[<(){}>((){})]((()[]){<>()})]>[<{[[]{}][{}()]}({(){}}<{}', '[{[<{<(([[([(<[]()>((){}))[([]{})[<>{}]]]{<{{}()}(<>{})>})<{(<{}{}>((){}))<{<>[]}<<>()>>}>]({<([{}<>]{<>(', '<{(<([<<{([<{([]{})<[]()>}<{[][]}({}[])>>{(<<>{}>){[()[]]<()()>}}]<[<(<>())><{()()}[()<>]>]>){<{[<(){}><', '(<([([<{<{[<(({}[])((){}))[[{}()](<>())]>][[{[[]()]<()()>]]<<{[]()}>{[{}<>]<[]()>}>]}<<([{{}<>}<()', '[({(({[[[[({{[{}{}]}{(()())[<>[]]}}<{<<>()>(<>[])}(([]){<>{}})>)<<{{[]}[<>()]}{{<>[]}<[]()>})>]]]]})[<[', '<((([[{({(<[<{{}<>>[[]()]><<[][]>[{}()]>][<<{}[]><{}<>>>{[{}()]{<>{}}}]><[{<(){}>{()()}}<(<>{', '[{<{(<{[((<{<{{}[]}({}{})>{({}[])[<>[]]}}{({[]()}){[{}()]<()>}}><<([[]]{<><>}){[[]()](<>{})}>{(<(){}>{[]', '<<([{(<<(([{[{<><>}<{}<>>][[()<>]]}([(()[])[[]()]}<<<>{}>{(){}}>)])[(<<{()()}><[()[]]{<>()}>><(([]{})', '[(<([<{<{{((<((){})<[]{}>>({()[]}({}<>))))}([<[(<>())[{}[]]]((<>[])[{}[]])>[[[(){}]{<>{}}]]])}[{({(<()()){{}', '{({<(<(<{{(({{<>[]}{<>[]}}[{{}}<<>>]))<<[<()[]><()[]>]<({}{})<<>[]>>>{[[[]())<[]()>]}>}{{{(<[]<>><', '{[{{[(<[[[({[{[]()}[[]]]<<<>[]><()()>>})][[(([<>{}]{{}()}){<{}<>>{[]<>}})[{({}<>)}]]<<{(<><>)<{}()>}<(<>())<<', '<{<{{[<[<{<(([[]{}])[[{}{}]{()[]}])<<{()()}{()<>)>>>}<[<[[{}{}][()[]]]<<[]()>(<>[])>>[(([])', '(([{([<<{{((({()()}[()<>])({<><>}))<<{[][]}[{}()]>{([]{})}>)}}(<<{(<[]()>{[]()})((()()){<><', '[[{<{{{{<(<{{{()[]}{{}[]}}}><<<<{}[]>{{}()}><[{}<>](()[])>>{{({}()><(){}>}<{[]()}[{}]>}>)>[[[{[[{}<>]<()()>][', '[(<<{[{([{[[[{(){}}]<[[][]][<>[]]>]<[<()[]>(()<>)]<<[]()>{[]<>}>>]<<{<{}{}>{{}<>}}{<<><>>[{}<>]}>[', '<[{[({[[[[([([[]<>]<<>{}>)(<{}[]>[<><>])]{[[[]<>}{<><>}]{(()())[()[]]}}){<(<()[]><{}{}>)>{((<><>)[<><>]){{<>', '{([((<{[<({{(<[]>({}{})]{[<>{}]<{}()>}}{([<>{}]<(){}>)[[<>{}](())]}})>[{{<[<<>[]>({}[])]<<{}{}>{', '[<<{([{{{([(<[<>[]][()<>]>(<[]()><<>[]>))(((()()){{}()})<<<>{}>[()<>]>)][{({[]{}}(<><>))[{(){}]]}{<([]<>)', '{[<(([[[{{[{<(<><>)<<>{}>>}]{<{<<><>>}>{[{[]()}[<><>]]([()()][()()])}}}<[{(<()<>>{{}<>})}]{{[<()>{{}[]}]{{{}', '[<[{({{{[<[({<<>{}>{{}{}}})<((<>{}))[{(){}}]>]><((<{[]()}>[([][])]))[[(<()()><{}{}>)[[{}<>]<<>{}}]]{[[<><>', '([{<(([(((<{({()[]}{[]<>})[{[]{}}]}>(<{<()[]>}(([]{})[[]])>)){{{({{}()})(<<>()><[]<>>)}<[{[]{}}]<(()[]>([](']

solvedLines = []

closedBrackets = [']', ')', '}', '>']
bracketPairs = ['[]', '()', '{}', '<>']

errorScoresMap = new Map([[']', 57], [')', 3], ['}', 1197], ['>', 25137]])
completionScoresMap = new Map([['(', 1], ['[', 2], ['{', 3], ['<', 4]])

function trimLines(linesList) {
	linesToCheck = []
	for (line of linesList) {
		lineIsSolved = true
		for (let i = 0; i < line.length; i++) {
			if (bracketPairs.includes(line.slice(i, i + 2))) {
				newLine = line.slice(0, i) + line.slice(i + 2)
				linesToCheck.push(newLine)
				lineIsSolved = false
				break
			}
		}
		if (lineIsSolved) {
			solvedLines.push(line)
		}
	}
	return [solvedLines, linesToCheck]
}

function solveLines(linesToCheck) {
	while (linesToCheck.length >= 1) {
		processedLines = trimLines(linesToCheck)
		solvedLines = processedLines[0]
		linesToCheck = processedLines[1]
	}

	return solvedLines
}

function findSyntaxErrors(solvedLines) {
	errorScore = 0
	incompleteLines = []
	for (line of solvedLines) {
		lineIsIncomplete = true
		for (let i = 0; i < line.length; i++) {
			char = line[i]
			if (closedBrackets.includes(char)) {
				errorScore += errorScoresMap.get(char)
				lineIsIncomplete = false
				break
			}
		}

		if (lineIsIncomplete) {
			incompleteLines.push(line)
		}
	}

	return [errorScore, incompleteLines]
}

function completeLines(linesToComplete) {
	scores = []
	for (line of linesToComplete) {
		lineScore = 0
		invertedLine = line.split("").reverse().join("")
		for (char of invertedLine) {
			lineScore *= 5
			lineScore += completionScoresMap.get(char)
		}
		scores.push(lineScore)
	}

	return scores
}

function solvePuzzle(inputArray) {
	solvedLines = solveLines(inputArray)

	errorCheckerReport = findSyntaxErrors(solvedLines)

	errorScore = errorCheckerReport[0]
	incompleteLines = errorCheckerReport[1]

	scores = completeLines(incompleteLines)

	console.log(errorScore)
	scores = scores.sort((a, b) => a - b)

	middleScore = scores[Math.floor(scores.length / 2)]

	console.log(middleScore)
}

solvePuzzle(puzzleInput)
